{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two top-level types in this package: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder"},{"type":"text","text":"."}]},{"anchor":"KeyEvent","level":4,"type":"heading","text":"KeyEvent"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent"},{"type":"text","text":" is quite powerful, yet simple to understand. To create one, all you need is a name, which will be used to store the event in "},{"type":"codeVoice","code":"UserDefaults"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let event = KeyEvent(name: \"OpenPreferences\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When a "},{"type":"codeVoice","code":"KeyEvent"},{"type":"text","text":" is initialized, an internal reference is created with the name you provide. From this point forward, any event created with the same name will share the same reference – and therefore, the same state. Let’s create a new key event with the same name as before, but this time, we’ll assign it a key and some modifiers."}]},{"type":"codeListing","syntax":"swift","code":["let fullEvent = KeyEvent(","    name: \"OpenPreferences\", ","    key: .space, ","    modifiers: [.control, .shift])"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, when we check the original event we created, we’ll see that its values have changed."}]},{"type":"codeListing","syntax":"swift","code":["let event = KeyEvent(name: \"OpenPreferences\")","","print(event.key)","\/\/ Prints: \"nil\"","","print(event.modifiers)","\/\/ Prints: \"[]\"","","let fullEvent = KeyEvent(","    name: \"OpenPreferences\", ","    key: .space, ","    modifiers: [.control, .shift])","","print(event.key)","\/\/ Prints: \"space\"","","print(event.modifiers)","\/\/ Prints: \"control, shift\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every time a new event is created, the internal reference gets updated. This ensures that every name is associated with a consistent state, app-wide."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, let’s call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/observe(_:handler:)"},{"type":"text","text":" and give the event an action to perform when it receives a key-down message."}]},{"type":"codeListing","syntax":"swift","code":["event.observe(.keyDown) {","    print(\"DOWN\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can do the same for key-up."}]},{"type":"codeListing","syntax":"swift","code":["event.observe(.keyDown) {","    print(\"DOWN\")","}","event.observe(.keyUp) {","    print(\"UP\")","}"]},{"type":"aside","style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/observe(_:handler:)"},{"type":"text","text":" as many times as you want."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once an observation has been created, the event is enabled, and will start listening for its key combination. You can disable it by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/disable()"},{"type":"text","text":", and re-enable it by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/enable()"},{"type":"text","text":". If you need to remove the event entirely, you can do so by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/remove()"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to operating on the key event itself, you can perform similar changes to its observations. When you call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/observe(_:handler:)"},{"type":"text","text":", an instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/Observation"},{"type":"text","text":" is returned, which contains the handler you provided. You can pass this into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/removeObservation(_:)"},{"type":"text","text":", or another similar method to remove the observation from the event and stop the handler from being executed."}]},{"anchor":"KeyRecorder","level":4,"type":"heading","text":"KeyRecorder"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder"},{"type":"text","text":" is a subclass of "},{"type":"codeVoice","code":"NSControl"},{"type":"text","text":" that enables you to record new keys and modifiers for a key event. Passing an event into "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder\/init(keyEvent:)"},{"type":"text","text":" creates a key recorder whose state is bound to that event. You can also create a key recorder using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder\/init(name:)"},{"type":"text","text":", a convenience initializer which automatically creates a key event based on the name you provide."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"recorder-window.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a key recorder is extremely simple. Clicking inside puts it into “recording” mode, where it awaits a key-down message. As soon as a key combination is pressed, the recorder updates its key event and enters “idle” mode. In idle mode, a “clear” button appears, which resets the key event to an empty state."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftkeys\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Get to know the main types and methods of "},{"type":"codeVoice","code":"SwiftKeys"},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Getting Started","role":"article","modules":[{"name":"SwiftKeys"}]},"hierarchy":{"paths":[["doc:\/\/SwiftKeys\/documentation\/SwiftKeys"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent","doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder"],"generated":true}],"references":{"recorder-window.png":{"alt":"A window containing a KeyRecorder.","type":"image","identifier":"recorder-window.png","variants":[{"url":"\/images\/recorder-window.png","traits":["1x","light"]},{"url":"\/images\/recorder-window~dark.png","traits":["1x","dark"]}]},"doc://SwiftKeys/documentation/SwiftKeys":{"role":"collection","title":"SwiftKeys","abstract":[{"type":"text","text":"A straightforward global hotkey API for macOS."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys"},"doc://SwiftKeys/documentation/SwiftKeys/KeyEvent/disable()":{"role":"symbol","title":"disable()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disable"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Disables the key event."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/disable()","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys\/keyevent\/disable()"},"doc://SwiftKeys/documentation/SwiftKeys/KeyRecorder/init(name:)":{"role":"symbol","title":"init(name:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyEvent","preciseIdentifier":"s:9SwiftKeys8KeyEventV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Name","preciseIdentifier":"s:9SwiftKeys8KeyEventV4NameV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a key recorder for the key event with the given name."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder\/init(name:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys\/keyrecorder\/init(name:)"},"doc://SwiftKeys/documentation/SwiftKeys/KeyEvent/Observation":{"role":"symbol","title":"KeyEvent.Observation","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Observation"}],"abstract":[{"type":"text","text":"The result type of a call to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/observe(_:handler:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/Observation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Observation"}],"url":"\/documentation\/swiftkeys\/keyevent\/observation"},"doc://SwiftKeys/documentation/SwiftKeys/KeyRecorder":{"role":"symbol","title":"KeyRecorder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyRecorder"}],"abstract":[{"type":"text","text":"A view that can record key events."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyRecorder"}],"url":"\/documentation\/swiftkeys\/keyrecorder"},"doc://SwiftKeys/documentation/SwiftKeys/KeyRecorder/init(keyEvent:)":{"role":"symbol","title":"init(keyEvent:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"keyEvent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyEvent","preciseIdentifier":"s:9SwiftKeys8KeyEventV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a key recorder for the given key event."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyRecorder\/init(keyEvent:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys\/keyrecorder\/init(keyevent:)"},"doc://SwiftKeys/documentation/SwiftKeys/KeyEvent":{"role":"symbol","title":"KeyEvent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyEvent"}],"abstract":[{"type":"text","text":"An observable key event."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyEvent"}],"url":"\/documentation\/swiftkeys\/keyevent"},"doc://SwiftKeys/documentation/SwiftKeys/KeyEvent/enable()":{"role":"symbol","title":"enable()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"enable"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Enables the key event."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/enable()","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys\/keyevent\/enable()"},"doc://SwiftKeys/documentation/SwiftKeys/KeyEvent/observe(_:handler:)":{"role":"symbol","title":"observe(_:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observe"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"KeyEvent","preciseIdentifier":"s:9SwiftKeys8KeyEventV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"EventType","preciseIdentifier":"s:9SwiftKeys8KeyEventV0D4TypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"KeyEvent","preciseIdentifier":"s:9SwiftKeys8KeyEventV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Observation","preciseIdentifier":"s:9SwiftKeys8KeyEventV11ObservationV"}],"abstract":[{"type":"text","text":"Observes the key event, and executes the provided handler when the event"},{"type":"text","text":" "},{"type":"text","text":"is triggered."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/observe(_:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys\/keyevent\/observe(_:handler:)"},"doc://SwiftKeys/documentation/SwiftKeys/KeyEvent/removeObservation(_:)":{"role":"symbol","title":"removeObservation(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeObservation"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"KeyEvent","preciseIdentifier":"s:9SwiftKeys8KeyEventV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Observation","preciseIdentifier":"s:9SwiftKeys8KeyEventV11ObservationV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes the given observation from the key event."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/removeObservation(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys\/keyevent\/removeobservation(_:)"},"doc://SwiftKeys/documentation/SwiftKeys/KeyEvent/remove()":{"role":"symbol","title":"remove()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Completely removes the key event and its handlers."}],"identifier":"doc:\/\/SwiftKeys\/documentation\/SwiftKeys\/KeyEvent\/remove()","kind":"symbol","type":"topic","url":"\/documentation\/swiftkeys\/keyevent\/remove()"}}}